<?php
/**
 * Reviews.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package Reviews
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.2 (http://modulestudio.de).
 */

/**
 * Cache api base class.
 */
class Reviews_Api_Base_Cache extends Zikula_AbstractApi
{
    /**
     * Clear cache for given item. Can be called from other modules to clear an item cache.
     *
     * @param $args['ot']   the treated object type
     * @param $args['item'] the actual object
     */
    public function clearItemCache(array $args = array())
    {
        if (!isset($args['ot']) || !isset($args['item'])) {
            return;
        }
    
        $objectType = $args['ot'];
        $item = $args['item'];
    
        $controllerHelper = new Reviews_Util_Controller($this->serviceManager);
        $utilArgs = array('api' => 'cache', 'action' => 'clearItemCache');
        if (!in_array($objectType, $controllerHelper->getObjectTypes('controllerAction', $utilArgs))) {
            return;
        }
    
        if ($item && !is_array($item) && !is_object($item)) {
            $item = ModUtil::apiFunc($this->name, 'selection', 'getEntity', array('ot' => $objectType, 'id' => $item, 'useJoins' => false, 'slimMode' => true));
        }
    
        if (!$item) {
            return;
        }
    
        // create full identifier (considering composite keys)
        $idFields = ModUtil::apiFunc($this->name, 'selection', 'getIdFields', array('ot' => $objectType));
        $instanceId = '';
        foreach ($idFields as $idField) {
            if (!empty($instanceId)) {
                $instanceId .= '_';
            }
            $instanceId .= $item[$idField];
        }
    
    
        // Clear View_cache
        $cacheIds = array();
        $cacheIds[] = 'main';
        $cacheIds[] = 'view';
        $cacheIds[] = $instanceId;
        
        
    
        $view = Zikula_View::getInstance('Reviews');
        foreach ($cacheIds as $cacheId) {
            $view->clear_cache(null, $cacheId);
        }
    
    
        // Clear Theme_cache
        $cacheIds = array();
        $cacheIds[] = 'homepage'; // for homepage (can be assigned in the Settings module)
        $cacheIds[] = 'Reviews/user/main'; // main function
        $cacheIds[] = 'Reviews/user/view/' . $objectType; // view function (list views)
        $cacheIds[] = 'Reviews/user/display/' . $objectType . '|' . $instanceId; // display function (detail views)
        
        
        $theme = Zikula_View_Theme::getInstance();
        $theme->clear_cacheid_allthemes($cacheIds);
    }
}
